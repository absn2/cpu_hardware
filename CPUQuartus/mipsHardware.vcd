$comment
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
$end

$date 
  10/17/2019 12:08:11 
$end
$version 
 QUARTUS_VCD_EXPORT 1.0 
$end
$timescale
  1 ps
$end
$scope module schemeHard $end
$var reg 32 ! aluAOut[31:0] $end
$var reg 32 " aluBOut[31:0] $end
$var reg 3 # alucontrol[2:0] $end
$var reg 32 $ aluresult[31:0] $end
$var reg 16 % bSExtended[15:0] $end
$var reg 1 & clk $end
$var reg 1 ' debug $end
$var reg 6 ( funct[5:0] $end
$var reg 6 ) functOut[5:0] $end
$var reg 1 * instControl $end
$var reg 32 + IORDout[31:0] $end
$var reg 32 , j[31:0] $end
$var reg 32 - LuiOut[31:0] $end
$var reg 4 . memtoRegmux[3:0] $end
$var reg 1 / muxXCHG $end
$var reg 6 0 opcodeW[5:0] $end
$var reg 32 1 pcOut[31:0] $end
$var reg 5 2 rd[4:0] $end
$var reg 16 3 rdshf[15:0] $end
$var reg 1 4 RegWriteC $end
$var reg 1 5 reset $end
$var reg 1 6 resetD2 $end
$var reg 5 7 rs[4:0] $end
$var reg 5 8 rt[4:0] $end
$var reg 32 9 sExtended[31:0] $end
$var reg 5 : shift[4:0] $end
$var reg 32 ; shiftOut[31:0] $end
$var reg 1 < sltOut $end
$var reg 32 = SourceSh[31:0] $end
$var reg 7 > stateOut[6:0] $end
$var reg 32 ? ulaOut_t[31:0] $end
$var reg 32 @ wrData[31:0] $end
$var reg 5 A wrReg[4:0] $end
$var reg 32 B xCHG[31:0] $end
$var reg 32 C xchgOUT[31:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
b0 #
b0 $
b0 %
0&
0'
b0 (
b0 )
0*
b0 +
b0 ,
b0 -
b0 .
0/
b0 0
b0 1
b0 2
b0 3
04
05
06
b0 7
b0 8
b0 9
b0 :
b0 ;
1<
b0 =
b0 >
b0 ?
b0 @
b0 A
b0 B
b0 C
$end
#10000
b100 "
b1 #
b100 $
1&
1'
b1001 .
0<
b1 >
b11100011 @
b11101 A
#20000
0&
0'
#30000
1&
1'
b10 >
#40000
0&
0'
#50000
b100 !
b1000 $
1&
1'
1*
b100 +
b100 1
b11 >
#60000
0&
0'
#70000
b1 %
1&
1'
b1 (
0*
b100 ,
b10000000000000000 -
b10 0
b1 3
b1 9
b100 >
#80000
0&
0'
#90000
1&
1'
b1 )
b110 >
b1000 ?
#100000
0&
0'
#110000
b0 !
b1 "
b0 #
b0 $
1&
1'
b0 .
1<
b1000100 >
b1000 @
b0 A
#120000
0&
0'
#130000
b100 !
b0 "
b100 $
1&
1'
0<
b1000101 >
#140000
0&
0'
#150000
1&
1'
b0 >
#160000
0&
0'
#170000
b100 "
b1 #
b1000 $
1&
1'
b1001 .
b1 >
b11100011 @
b11101 A
#180000
0&
0'
#190000
1&
1'
b10 >
#200000
0&
0'
#210000
b1000 !
b1100 $
1&
1'
1*
b1000 +
b1000 1
b11 >
#220000
0&
0'
#230000
b0 "
b1000 $
b0 %
1&
1'
b0 (
0*
b0 ,
b0 -
b0 3
b0 9
b100 >
#240000
0&
0'
#250000
1&
1'
b0 )
b110 >
#260000
0&
0'
#270000
b0 !
b0 #
b0 $
1&
1'
b0 .
1<
b1000100 >
b1000 @
b0 A
#280000
0&
0'
#290000
1&
1'
b0 +
b0 1
b1000101 >
#300000
0&
0'
#310000
1&
1'
b0 >
#320000
0&
0'
#330000
b100 "
b1 #
b100 $
1&
1'
b1001 .
0<
b1 >
b11100011 @
b11101 A
#340000
0&
0'
#350000
1&
1'
b10 >
#360000
0&
0'
#370000
b100 !
b1000 $
1&
1'
1*
b100 +
b100 1
b11 >
#380000
0&
0'
#390000
b1 %
1&
1'
b1 (
0*
b100 ,
b10000000000000000 -
b1 3
b1 9
b100 >
#400000
0&
0'
#410000
1&
1'
b1 )
b110 >
#420000
0&
0'
#430000
b0 !
b1 "
b0 #
b0 $
1&
1'
b0 .
1<
b1000100 >
b1000 @
b0 A
#440000
0&
0'
#450000
b100 !
b0 "
b100 $
1&
1'
0<
b1000101 >
#460000
0&
0'
#470000
1&
1'
b0 >
#480000
0&
0'
#490000
b100 "
b1 #
b1000 $
1&
1'
b1001 .
b1 >
b11100011 @
b11101 A
#500000
0&
0'
#510000
1&
1'
b10 >
#520000
0&
0'
#530000
b1000 !
b1100 $
1&
1'
1*
b1000 +
b1000 1
b11 >
#540000
0&
0'
#550000
b0 "
b1000 $
b0 %
1&
1'
b0 (
0*
b0 ,
b0 -
b0 3
b0 9
b100 >
#560000
0&
0'
#570000
1&
1'
b0 )
b110 >
#580000
0&
0'
#590000
b0 !
b0 #
b0 $
1&
1'
b0 .
1<
b1000100 >
b1000 @
b0 A
#600000
0&
0'
#610000
1&
1'
b0 +
b0 1
b1000101 >
#620000
0&
0'
#630000
1&
1'
b0 >
#640000
0&
0'
#650000
b100 "
b1 #
b100 $
1&
1'
b1001 .
0<
b1 >
b11100011 @
b11101 A
#660000
0&
0'
#670000
1&
1'
b10 >
#680000
0&
0'
#690000
b100 !
b1000 $
1&
1'
1*
b100 +
b100 1
b11 >
#700000
0&
0'
#710000
b1 %
1&
1'
b1 (
0*
b100 ,
b10000000000000000 -
b1 3
b1 9
b100 >
#720000
0&
0'
#730000
1&
1'
b1 )
b110 >
#740000
0&
0'
#750000
b0 !
b1 "
b0 #
b0 $
1&
1'
b0 .
1<
b1000100 >
b1000 @
b0 A
#760000
0&
0'
#770000
b100 !
b0 "
b100 $
1&
1'
0<
b1000101 >
#780000
0&
0'
#790000
1&
1'
b0 >
#800000
0&
0'
#810000
b100 "
b1 #
b1000 $
1&
1'
b1001 .
b1 >
b11100011 @
b11101 A
#820000
0&
0'
#830000
1&
1'
b10 >
#840000
0&
0'
#850000
b1000 !
b1100 $
1&
1'
1*
b1000 +
b1000 1
b11 >
#860000
0&
0'
#870000
b0 "
b1000 $
b0 %
1&
1'
b0 (
0*
b0 ,
b0 -
b0 3
b0 9
b100 >
#880000
0&
0'
#890000
1&
1'
b0 )
b110 >
#900000
0&
0'
#910000
b0 !
b0 #
b0 $
1&
1'
b0 .
1<
b1000100 >
b1000 @
b0 A
#920000
0&
0'
#930000
1&
1'
b0 +
b0 1
b1000101 >
#940000
0&
0'
#950000
1&
1'
b0 >
#960000
0&
0'
#970000
b100 "
b1 #
b100 $
1&
1'
b1001 .
0<
b1 >
b11100011 @
b11101 A
#980000
0&
0'
#990000
1&
1'
b10 >
#1000000
