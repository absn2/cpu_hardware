$comment
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
$end

$date 
  10/17/2019 19:58:27 
$end
$version 
 QUARTUS_VCD_EXPORT 1.0 
$end
$timescale
  1 ps
$end
$scope module schemeHard $end
$var reg 32 ! aluAOut[31:0] $end
$var reg 32 " aluBOut[31:0] $end
$var reg 3 # alucontrol[2:0] $end
$var reg 32 $ aluresult[31:0] $end
$var reg 16 % bSExtended[15:0] $end
$var reg 1 & clk $end
$var reg 2 ' controlLS[1:0] $end
$var reg 1 ( debug $end
$var reg 6 ) funct[5:0] $end
$var reg 6 * functOut[5:0] $end
$var reg 1 + instControl $end
$var reg 32 , IORDout[31:0] $end
$var reg 32 - j[31:0] $end
$var reg 32 . LuiOut[31:0] $end
$var reg 32 / MDROut[31:0] $end
$var reg 32 0 memoriaOut[31:0] $end
$var reg 4 1 memtoRegmux[3:0] $end
$var reg 1 2 muxXCHG $end
$var reg 6 3 opcodeW[5:0] $end
$var reg 32 4 pcOut[31:0] $end
$var reg 1 5 pcWriteS $end
$var reg 32 6 pcWriteSource[31:0] $end
$var reg 5 7 rd[4:0] $end
$var reg 16 8 rdshf[15:0] $end
$var reg 1 9 RegWriteC $end
$var reg 1 : reset $end
$var reg 1 ; resetD2 $end
$var reg 5 < rs[4:0] $end
$var reg 5 = rt[4:0] $end
$var reg 32 > sExtended[31:0] $end
$var reg 5 ? shift[4:0] $end
$var reg 32 @ shiftOut[31:0] $end
$var reg 1 A sltOut $end
$var reg 32 B SourceSh[31:0] $end
$var reg 7 C stateOut[6:0] $end
$var reg 32 D storeOUT[31:0] $end
$var reg 1 E storeWr $end
$var reg 32 F ulaOut_t[31:0] $end
$var reg 32 G wrData[31:0] $end
$var reg 5 H wrReg[4:0] $end
$var reg 32 I xCHG[31:0] $end
$var reg 32 J xchgOUT[31:0] $end
$scope module inst6 $end
$var reg 32 K Reg0[31:0] $end
$var reg 32 L Reg1[31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
b0 #
b0 $
b0 %
0&
b0 '
0(
b0 )
b0 *
0+
b0 ,
b0 -
b0 .
b0 /
b0 0
b0 1
02
b0 3
b0 4
05
b0 6
b0 7
b0 8
09
0:
0;
b0 <
b0 =
b0 >
b0 ?
b0 @
1A
b0 B
b0 C
bX D
0E
b0 F
b0 G
b0 H
b0 I
b0 J
b0 K
b0 L
$end
#10000
b100 "
b1 #
b100 $
1&
1(
b1001 1
b100 6
0A
b1 C
b11100011 G
b11101 H
#20000
0&
0(
#30000
1&
1(
b100000000000000000000000010100 0
15
b10 C
#40000
0&
0(
#50000
b100 !
b1000 $
1&
1(
1+
b100 ,
b100000000000000000000000010100 /
b100 4
05
b1000 6
b11 C
#60000
0&
0(
#70000
b1010000 "
b1010100 $
b10100 %
1&
1(
b10100 )
0+
b1010000 -
b101000000000000000000 .
b1000 3
b1010100 6
b10100 8
b10100 >
b100 C
#80000
0&
0(
#90000
1&
1(
b10100 *
b10101100000000000000000000000000 0
b110 C
b1010100 F
#100000
0&
0(
#110000
b0 !
b10100 "
b10100 $
1&
1(
b10101100000000000000000000000000 /
b10100 6
b1000 C
#120000
0&
0(
#130000
b0 "
b0 #
b0 $
1&
1(
b0 1
b0 6
19
1A
b1000100 C
b10100 F
b10100 G
b0 H
#140000
0&
0(
#150000
b100 !
b100 $
1&
1(
b100 6
09
0A
b1000101 C
b10100 K
#160000
0&
0(
#170000
b10100 "
1&
1(
b10100 ?
1A
b10100 B
b0 C
b10100 J
#180000
0&
0(
#190000
b100 "
b1 #
b1000 $
1&
1(
b1001 1
b1000 6
0A
b1 C
b11100011 G
b11101 H
#200000
0&
0(
#210000
1&
1(
15
b10 C
#220000
0&
0(
#230000
b1000 !
b1100 $
1&
1(
1+
b1000 ,
b1000 4
05
b1100 6
b11 C
#240000
0&
0(
#250000
b0 "
b1000 $
b0 %
1&
1(
b0 )
0+
b0 -
b0 .
b101011 3
b1000 6
b0 8
b0 >
b100 C
#260000
0&
0(
#270000
1&
1(
b0 *
b10001100000000010000000000000000 0
b110 C
b1000 F
#280000
0&
0(
#290000
b10100 !
b10100 $
1&
1(
b10100 ,
b10001100000000010000000000000000 /
b110 1
b10100 6
b11110 C
b0 G
b0 H
#300000
0&
0(
#310000
1&
1(
b0 1
b11111 C
b10100 F
b10100 G
#320000
0&
0(
#330000
1&
1(
b0 0
b1000100 C
b10100 D
1E
#340000
0&
0(
#350000
b1000 !
b10100 "
b0 #
b1000 $
1&
1(
b1000 ,
b0 /
b1000 6
1A
b1000101 C
0E
#360000
0&
0(
#370000
1&
1(
b10100 0
b0 C
#380000
0&
0(
#390000
b100 "
b1 #
b1100 $
1&
1(
b10100 /
b10001100000000010000000000000000 0
b1001 1
b1100 6
0A
b1 C
b11100011 G
b11101 H
#400000
0&
0(
#410000
1&
1(
b10001100000000010000000000000000 /
15
b10 C
#420000
0&
0(
#430000
b1100 !
b10000 $
1&
1(
1+
b1100 ,
b1100 4
05
b10000 6
b11 C
#440000
0&
0(
#450000
b0 "
b1100 $
1&
1(
0+
b1000000000000000000 -
b100011 3
b1100 6
b1 =
b100 C
#460000
0&
0(
#470000
1&
1(
b0 0
b0 ?
b110 C
b1100 F
#480000
0&
0(
#490000
b10100 !
b10100 $
1&
1(
b10100 ,
b0 /
b110 1
b10100 6
b11001 C
b0 G
b1 H
#500000
0&
0(
#510000
1&
1(
b0 1
b11010 C
b1100 G
#520000
0&
0(
#530000
1&
b1 '
1(
b10100 0
b1 1
19
b1000100 C
b0 G
#540000
0&
0(
#550000
b1100 !
b0 #
b1100 $
1&
b0 '
1(
b1100 ,
b10100 /
b0 1
b1100 6
09
b1000101 C
b1100 G
#560000
0&
0(
#570000
1&
1(
b0 C
#580000
0&
0(
#590000
b100 "
b1 #
b10000 $
1&
1(
b0 0
b1001 1
b10000 6
b1 C
b11100011 G
b11101 H
#600000
0&
0(
#610000
1&
1(
b0 /
15
b10 C
#620000
0&
0(
#630000
b10000 !
b10100 $
1&
1(
1+
b10000 ,
b10000 4
05
b10100 6
b11 C
#640000
0&
0(
#650000
b0 "
b10000 $
1&
1(
0+
b0 -
b0 3
b10000 6
b0 =
b100 C
#660000
0&
0(
#670000
1&
1(
b10100 ?
b110 C
b10000 F
#680000
0&
0(
#690000
1&
1(
b0 ?
b1101 C
#700000
0&
0(
#710000
b10100 "
b0 #
1&
1(
b0 1
b10100 @
1A
b1111 C
b10000 G
b0 H
#720000
0&
0(
#730000
b10100 !
b10100 $
1&
1(
b111 1
b10100 6
19
b1000100 C
b10100 G
#740000
0&
0(
#750000
b10000 !
b10000 $
1&
1(
b0 1
b10000 6
09
b10100 ?
b1000101 C
b10000 G
#760000
0&
0(
#770000
1&
1(
b0 C
#780000
0&
0(
#790000
b100 "
b1 #
b10100 $
1&
1(
b1001 1
b10100 6
0A
b1 C
b11100011 G
b11101 H
#800000
0&
0(
#810000
1&
1(
15
b10 C
#820000
0&
0(
#830000
b10100 !
b11000 $
1&
1(
1+
b10100 ,
b10100 4
05
b11000 6
b11 C
#840000
0&
0(
#850000
b0 "
b10100 $
1&
1(
0+
b10100 6
b100 C
#860000
0&
0(
#870000
1&
1(
b10100 0
b110 C
b10100 F
#880000
0&
0(
#890000
1&
1(
b10100 /
b0 ?
b1101 C
#900000
0&
0(
#910000
b10100 "
b0 #
1&
1(
b0 1
1A
b1111 C
b10100 G
b0 H
#920000
0&
0(
#930000
1&
1(
b111 1
19
b1000100 C
#940000
0&
0(
#950000
1&
1(
b0 1
09
b10100 ?
b1000101 C
#960000
0&
0(
#970000
1&
1(
b0 C
#980000
0&
0(
#990000
b100 "
b1 #
b11000 $
1&
1(
b1001 1
b11000 6
0A
b1 C
b11100011 G
b11101 H
#1000000
